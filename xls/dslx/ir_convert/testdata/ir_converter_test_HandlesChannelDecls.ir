package test_module

file_number 0 "test_module.x"

chan test_module__u32_chan(bits[32], id=0, kind=streaming, ops=send_receive, flow_control=ready_valid, strictness=proven_mutually_exclusive, metadata="""""")
chan test_module__u64_chan(bits[64], id=1, kind=streaming, ops=send_receive, flow_control=ready_valid, strictness=proven_mutually_exclusive, metadata="""""")
chan test_module__tuple_chan((bits[64], (bits[64], (bits[64]))), id=2, kind=streaming, ops=send_receive, flow_control=ready_valid, strictness=proven_mutually_exclusive, metadata="""""")
chan test_module__tuple_with_array_chan((bits[64], (bits[64], bits[64][4])), id=3, kind=streaming, ops=send_receive, flow_control=ready_valid, strictness=proven_mutually_exclusive, metadata="""""")

top proc __test_module__main_0_next(__state: (), init={()}) {
  __token: token = literal(value=token, id=1)
  literal.3: bits[1] = literal(value=1, id=3)
  tuple.4: () = tuple(id=4)
  next (tuple.4)
}
