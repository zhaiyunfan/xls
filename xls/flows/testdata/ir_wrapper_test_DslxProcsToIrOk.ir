package test_package

file_number 0 "top_module.x"

chan test_package__in_0(bits[32], id=0, kind=streaming, ops=receive_only, flow_control=ready_valid, strictness=proven_mutually_exclusive, metadata="""""")
chan test_package__in_1(bits[32], id=1, kind=streaming, ops=receive_only, flow_control=ready_valid, strictness=proven_mutually_exclusive, metadata="""""")
chan test_package__output(bits[32], id=2, kind=streaming, ops=send_only, flow_control=ready_valid, strictness=proven_mutually_exclusive, metadata="""""")

proc __top__foo_0_next() {
  __token: token = literal(value=token, id=1)
  receive.4: (token, bits[32]) = receive(__token, channel=test_package__in_0, id=4)
  tok: token = tuple_index(receive.4, index=0, id=6, pos=[(0,11,13)])
  receive.8: (token, bits[32]) = receive(tok, channel=test_package__in_1, id=8)
  a: bits[32] = tuple_index(receive.4, index=1, id=7, pos=[(0,11,18)])
  b: bits[32] = tuple_index(receive.8, index=1, id=11, pos=[(0,12,18)])
  tok__1: token = tuple_index(receive.8, index=0, id=10, pos=[(0,12,13)])
  add.12: bits[32] = add(a, b, id=12, pos=[(0,13,38)])
  tok__2: token = send(tok__1, add.12, channel=test_package__output, id=13)
}
